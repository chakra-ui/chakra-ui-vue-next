// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CTag renders base tag properly 1`] = `
<DocumentFragment>
  <span
    aria-label="tag"
    class="chakra-tag chakra-1cf9avz"
  >
    Sample tag
  </span>
</DocumentFragment>
`;

exports[`CTag renders base tag with c-label properly 1`] = `
<DocumentFragment>
  <span
    aria-label="tag"
    class="chakra-tag chakra-1cf9avz"
  >
    <span
      class="chakra-1vp3zs1"
    >
      Sample tag
    </span>
  </span>
</DocumentFragment>
`;

exports[`CTag renders tag with left icon properly 1`] = `
<DocumentFragment>
  <span
    aria-label="tag"
    class="chakra-tag chakra-1cf9avz"
  >
    <svg
      class="chakra-icon chakra-1iuf2uu"
      focusable="false"
      viewBox="0 0 24 24"
    >
      
    
      <g
        stroke="currentColor"
        strokewidth="1.5"
      >
        
      
        <path
          d="M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
          fill="none"
          strokelinecap="round"
        />
        
      
        <path
          d="M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
          fill="currentColor"
          strokelinecap="round"
        />
        
      
        <circle
          cx="12"
          cy="12"
          fill="none"
          r="11.25"
          strokemiterlimit="10"
        />
        
    
      </g>
      
  
    </svg>
    <span
      class="chakra-1vp3zs1"
    >
      Sample tag
    </span>
  </span>
</DocumentFragment>
`;

exports[`CTag renders with close button properly 1`] = `
<DocumentFragment>
  <span
    aria-label="tag"
    class="chakra-tag chakra-1cf9avz"
  >
    <span
      class="chakra-1vp3zs1"
    >
      Sample tag
    </span>
    <button
      aria-label="close"
      class="chakra-piepz9"
      type="button"
    >
      <svg
        attrs="[object Object]"
        class="chakra-icon chakra-1md6f3y"
        emit="(event, ...args) => instance.emit(event, ...args)"
        expose="exposed => {
        {
            if (instance.exposed) {
                warn(\`expose() should be called only once per setup().\`);
            }
            if (exposed != null) {
                let exposedType = typeof exposed;
                if (exposedType === 'object') {
                    if (shared.isArray(exposed)) {
                        exposedType = 'array';
                    }
                    else if (reactivity.isRef(exposed)) {
                        exposedType = 'ref';
                    }
                }
                if (exposedType !== 'object') {
                    warn(\`expose() should be passed a plain object, received \${exposedType}.\`);
                }
            }
        }
        instance.exposed = exposed || {};
    }"
        focusable="false"
        slots="[object Object]"
        viewBox="0 0 512 512"
      >
        <path
          d="M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z"
          fill="currentColor"
        />
      </svg>
    </button>
  </span>
</DocumentFragment>
`;

exports[`CTag renders with disabled button properly 1`] = `
<DocumentFragment>
  <span
    aria-label="tag"
    class="chakra-tag chakra-1cf9avz"
  >
    <span
      class="chakra-1vp3zs1"
    >
      Sample tag
    </span>
    <button
      aria-label="close"
      class="chakra-piepz9"
      disabled=""
      type="button"
    >
      <svg
        attrs="[object Object]"
        class="chakra-icon chakra-1md6f3y"
        emit="(event, ...args) => instance.emit(event, ...args)"
        expose="exposed => {
        {
            if (instance.exposed) {
                warn(\`expose() should be called only once per setup().\`);
            }
            if (exposed != null) {
                let exposedType = typeof exposed;
                if (exposedType === 'object') {
                    if (shared.isArray(exposed)) {
                        exposedType = 'array';
                    }
                    else if (reactivity.isRef(exposed)) {
                        exposedType = 'ref';
                    }
                }
                if (exposedType !== 'object') {
                    warn(\`expose() should be passed a plain object, received \${exposedType}.\`);
                }
            }
        }
        instance.exposed = exposed || {};
    }"
        focusable="false"
        slots="[object Object]"
        viewBox="0 0 512 512"
      >
        <path
          d="M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z"
          fill="currentColor"
        />
      </svg>
    </button>
  </span>
</DocumentFragment>
`;

exports[`CTag renders with left icon and close button 1`] = `
<DocumentFragment>
  <span
    aria-label="tag"
    class="chakra-tag chakra-1cf9avz"
  >
    <svg
      class="chakra-icon chakra-1iuf2uu"
      focusable="false"
      viewBox="0 0 24 24"
    >
      
    
      <g
        stroke="currentColor"
        strokewidth="1.5"
      >
        
      
        <path
          d="M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
          fill="none"
          strokelinecap="round"
        />
        
      
        <path
          d="M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
          fill="currentColor"
          strokelinecap="round"
        />
        
      
        <circle
          cx="12"
          cy="12"
          fill="none"
          r="11.25"
          strokemiterlimit="10"
        />
        
    
      </g>
      
  
    </svg>
    <span
      class="chakra-1vp3zs1"
    >
      Sample tag
    </span>
    <button
      aria-label="close"
      class="chakra-piepz9"
      type="button"
    >
      <svg
        attrs="[object Object]"
        class="chakra-icon chakra-1md6f3y"
        emit="(event, ...args) => instance.emit(event, ...args)"
        expose="exposed => {
        {
            if (instance.exposed) {
                warn(\`expose() should be called only once per setup().\`);
            }
            if (exposed != null) {
                let exposedType = typeof exposed;
                if (exposedType === 'object') {
                    if (shared.isArray(exposed)) {
                        exposedType = 'array';
                    }
                    else if (reactivity.isRef(exposed)) {
                        exposedType = 'ref';
                    }
                }
                if (exposedType !== 'object') {
                    warn(\`expose() should be passed a plain object, received \${exposedType}.\`);
                }
            }
        }
        instance.exposed = exposed || {};
    }"
        focusable="false"
        slots="[object Object]"
        viewBox="0 0 512 512"
      >
        <path
          d="M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z"
          fill="currentColor"
        />
      </svg>
    </button>
  </span>
</DocumentFragment>
`;

exports[`CTag renders with right icon properly 1`] = `
<DocumentFragment>
  <span
    aria-label="tag"
    class="chakra-tag chakra-1cf9avz"
  >
    <span
      class="chakra-1vp3zs1"
    >
      Sample tag
    </span>
    <svg
      class="chakra-icon chakra-1odll4e"
      focusable="false"
      viewBox="0 0 24 24"
    >
      
    
      <g
        stroke="currentColor"
        strokewidth="1.5"
      >
        
      
        <path
          d="M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
          fill="none"
          strokelinecap="round"
        />
        
      
        <path
          d="M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
          fill="currentColor"
          strokelinecap="round"
        />
        
      
        <circle
          cx="12"
          cy="12"
          fill="none"
          r="11.25"
          strokemiterlimit="10"
        />
        
    
      </g>
      
  
    </svg>
  </span>
</DocumentFragment>
`;
